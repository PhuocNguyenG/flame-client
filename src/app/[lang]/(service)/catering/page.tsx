import {
  cateringAppetizerComboData,
  cateringAppetizerData,
  cateringDessertData,
  cateringMainDishesData,
  cateringMenuData,
} from "@/assets/catering-data";
import {
  Accordion,
  AccordionContent,
  AccordionItem,
  AccordionTrigger,
} from "@/components/ui/accordion";
import { Breadcrumb } from "@/components/ui/breadcrumb";
import { useTransServer } from "@/lib/i18n/server";
import { Locale } from "@/lib/i18n/setting";
import { Metadata } from "next";
import Script from "next/script";

export async function generateMetadata({
  params: { lang },
}: {
  params: { lang?: Locale };
}): Promise<Metadata> {
  return {
    title:
      "D·ªãch v·ª• ƒë·∫∑t, n·∫•u ti·ªác t·∫°i nh√† Thu S∆∞∆°ng - Qu·∫≠n 12, G√≤ V·∫•p, T√¢n B√¨nh - Tp.HCM",
    description:
      "D·ªãch v·ª• ƒë·∫∑t ti·ªác, n·∫•u ti·ªác Thu S∆∞∆°ng - N·∫•u ti·ªác t·∫°i nh√† c√°c qu·∫≠n G√≤ V·∫•p, qu·∫≠n 12, T√¢n B√¨nh, Tp H·ªì Ch√≠ Minh. Th·ª±c ƒë∆°n phong ph√∫, gi√° c·∫£ h·ª£p l√≠, b√¨nh d√¢n. ƒê·∫∑t ti·ªác t√¢n gia, ƒë√°m c∆∞·ªõi, th√¥i n√¥i, ‚Ä¶",
    keywords: [
      "dat tiec, nau tiec tai nha",
      "nau tiec quan 12",
      "nau tiec go vap",
      "nau tiec tan binh",
      "nau tiec thu suong",
      "dich vu nau tiec thu suong",
    ],
    robots: {
      index: true,
      follow: true,
    },
    openGraph: {
      title:
        "D·ªãch v·ª• ƒë·∫∑t, n·∫•u ti·ªác t·∫°i nh√† Thu S∆∞∆°ng - Qu·∫≠n 12, G√≤ V·∫•p, T√¢n B√¨nh - Tp.HCM",
      description:
        "D·ªãch v·ª• ƒë·∫∑t ti·ªác, n·∫•u ti·ªác Thu S∆∞∆°ng - N·∫•u ti·ªác t·∫°i nh√† c√°c qu·∫≠n G√≤ V·∫•p, qu·∫≠n 12, T√¢n B√¨nh, Tp H·ªì Ch√≠ Minh. Th·ª±c ƒë∆°n phong ph√∫, gi√° c·∫£ h·ª£p l√≠, b√¨nh d√¢n. ƒê·∫∑t ti·ªác t√¢n gia, ƒë√°m c∆∞·ªõi, th√¥i n√¥i, ‚Ä¶",
      url: "https://flameagricultural.com/dich-vu-nau-tiec",
      images: [
        {
          url: "https://cdn.flameagricultural.com/ThuSuong-Catering.jpg",
          width: 350,
          height: 500,
        },
      ],
      phoneNumbers: ["0973912839"],
      authors: "C√¥ng ty TNHH TM-DV-XNK Ph∆∞·ªõc Linh",
      siteName: lang === "en" ? "Flame Agricultural" : "N√¥ng S·∫£n Flame",
      type: "article",
    },
  };
}

export default async function Page({
  params: { lang },
}: {
  params: { lang: Locale };
}) {
  const fetchData = await Promise.all([useTransServer(lang)]);
  const { t } = fetchData[0];

  const jsonLd = {
    "@context": "https://schema.org",
    "@type": "NewsArticle",
    headline:
      "D·ªãch v·ª• ƒë·∫∑t, n·∫•u ti·ªác t·∫°i nh√† Thu S∆∞∆°ng - Qu·∫≠n 12, G√≤ V·∫•p, T√¢n B√¨nh, ‚Ä¶ - Tp.HCM",
    image: ["https://cdn.flameagricultural.com/ThuSuong-Catering.jpg"],
    datePublished: "2023-11-11T13:04:20.786Z",
    dateModified: "2023-11-11T14:21:35.323Z",
    author: [
      {
        "@type": "Person",
        name: "Ho√†ng Th·ªã Thu",
        url: "https://flameagricultural.com",
      },
    ],
  };

  return (
    <>
      <Script
        id="catering-detail-structured-data-script"
        type="application/ld+json"
        dangerouslySetInnerHTML={{ __html: JSON.stringify(jsonLd, null, "\t") }}
      />
      <div className="container flex flex-col w-full h-full font-medium mb-2">
        <Breadcrumb data={[{ name: t("HomeCatering"), href: "/catering" }]} />

        <div className=" flex flex-col w-full h-fit">
          <h1 className=" text-3xl font-bold rounded-md w-full text-center px-5 max480:px-0 py-3 my-5 [text-shadow:0px_0px_black] border-4 border-logo text-[#beff00] bg-primary uppercase">
            D·ªãch v·ª• ƒë·∫∑t ti·ªác t·∫°i nh√†{" "}
            <span className="underline underline-offset-4 decoration-double whitespace-nowrap">
              Thu S∆∞∆°ng
            </span>
          </h1>
          <p className="relative block">
            ‚ú®Chuy√™n cung c·∫•p d·ªãch v·ª• ƒë·∫∑t ti·ªác, n·∫•u ti·ªác t·∫°i nh√† c√πng v·ªõi nhi·ªÅu
            b·ªô th·ª±c ƒë∆°n v·ªõi m·ª©c gi√° r·∫•t h·ª£p l√Ω, b√¨nh d√¢n, ch·∫•t l∆∞·ª£ng. Thu S∆∞∆°ng
            nh·∫≠n ƒë·∫∑t ti·ªác t·ª´ ti·ªác ƒë√°m c∆∞·ªõi, ƒë√°m h·ªèi, ƒë·∫ßy th√°ng, th√¥i n√¥i, sinh
            nh·∫≠t, gi·ªó ch·∫°p, h·ªçp m·∫∑t gia ƒë√¨nh, khai tr∆∞∆°ng c·ª≠a h√†ng, c√¥ng ty,
            doanh nghi·ªáp ho·∫∑c t·ªï ch·ª©c tr·ªçn g√≥i theo y√™u c·∫ßu.{" "}
            <span className="absolute -left-4 top-0 h-full w-2 bg-logo rounded-[2px]"></span>
          </p>
          <span className="flex flex-row justify-center text-3xl max480:text-2xl font-semibold tracking-wider w-full py-2 my-3">
            <div className="relative block w-fit h-full rounded-md bg-primary text-[#beff00] px-5 py-1.5 z-[1] font-bold text-lg before:absolute before:top-[4px] before:-right-[0.5rem] before:bg-primary before:rounded-md before:h-[28px] before:w-[28px] before:-z-[1] before:rotate-45 after:absolute after:top-[4px] after:-left-[0.5rem] after:bg-primary after:rounded-md after:h-[28px] after:w-[28px] after:-z-[1] after:rotate-45 uppercase">
              Th·ª±c ƒë∆°n
            </div>
          </span>
          <p className="relative block">
            ‚ú®V·ªõi 12 b·ªô menu ch·ªçn s·∫µn v√† h∆°n 80 m√≥n ƒÉn t√πy ch·ªçn phong ph√∫, mang
            n√©t ƒë·∫∑t tr∆∞ng c·ªßa Vi·ªát Nam.
            <span className="absolute -left-4 top-0 h-full w-2 bg-logo rounded-[2px]"></span>
          </p>

          <div className="grid grid-cols-[repeat(auto-fill,minmax(300px,1fr))] gap-3 my-3">
            {cateringMenuData?.map((menu, index) => {
              return (
                <Accordion
                  type="multiple"
                  className=" [&_svg]:text-primary-foreground bg-primary-foreground/5 h-fit"
                  key={menu.name}
                >
                  <AccordionItem
                    value={menu.name}
                    className="border-x border-primary/40 "
                  >
                    <AccordionTrigger className="text-white bg-primary text-base uppercase px-2 py-2 my-0 font-medium hover:no-underline">
                      <div className="flex flex-row items-center ">
                        <span className=" px-2 py-[2px] whitespace-nowrap">
                          {menu.name}
                        </span>
                        <span className="px-2 text-primary-foreground">
                          |&nbsp;&nbsp;
                          {menu.price
                            .toString()
                            .replace(/\B(?=(\d{3})+(?!\d))/gm, ".")}
                          &nbsp;VNƒê
                        </span>
                      </div>
                    </AccordionTrigger>
                    <AccordionContent>
                      <div className="flex flex-col gap-2 text-base text-primary px-3 font-semibold ">
                        {menu.dishes?.map((item, idx) => {
                          return (
                            <div
                              className="flex flex-row justify-between items-center w-full border-b"
                              key={idx}
                            >
                              <div className="flex flex-row flex-nowrap w-full">
                                <div>
                                  <span className="px-1 bg-[#e4e9a8b3] rounded-sm h-fit">
                                    {idx + 1}
                                  </span>
                                </div>
                                <div className="whitespace-normal">
                                  /&nbsp;{item}
                                </div>
                              </div>
                            </div>
                          );
                        })}
                      </div>
                    </AccordionContent>
                  </AccordionItem>
                </Accordion>
              );
            })}
          </div>
          <div className="relative block">
            <p>
              üéà<span className="underline underline-offset-4">L∆∞u √Ω</span>: chi
              ph√≠ tr√™n m·ªói th·ª±c ƒë∆°n ƒë√£ bao g·ªìm b√†n gh·∫ø inox, b√°t ƒë≈©a, ly, nh√¢n
              vi√™n ph·ª•c v·ª•, ‚Ä¶ v√† ph√≠ v·∫≠n chuy·ªÉn 2 chi·ªÅu (√°p d·ª•ng khi qu√Ω kh√°ch
              ƒë·∫∑t t·ª´ 3 b√†n tr·ªü l√™n v√† trong n·ªôi th√†nh th√†nh ph·ªë H·ªì Ch√≠ Minh).
            </p>
            <p>
              üçÉ Qu√Ω kh√°ch c≈©ng c√≥ th·ªÉ ch·ªânh s·ª≠a menu ho·∫∑c t·ª± t√πy ch·ªçn theo nhu
              c·∫ßu v·ªõi danh s√°ch m√≥n d∆∞·ªõi ƒë√¢y ‚¨áÔ∏è.
            </p>
            <span className="absolute -left-4 top-0 h-full w-2 bg-logo rounded-[2px]"></span>
          </div>

          <span className="flex flex-row justify-center text-3xl max480:text-2xl font-semibold tracking-wider w-full py-2 my-3">
            <div className="relative block w-fit h-full rounded-md bg-primary text-[#beff00] px-5 py-1.5 z-[1] font-bold text-lg before:absolute before:top-[4px] before:-right-[0.5rem] before:bg-primary before:rounded-md before:h-[28px] before:w-[28px] before:-z-[1] before:rotate-45 after:absolute after:top-[4px] after:-left-[0.5rem] after:bg-primary after:rounded-md after:h-[28px] after:w-[28px] after:-z-[1] after:rotate-45 uppercase">
              Khai v·ªã
            </div>
          </span>
          <p className="relative block">
            ü•óM√≥n khai v·ªã l√† c√°c m√≥n d√πng ƒë·ªÉ m·ªü m√†n b·ªØa ti·ªác, l√† m√≥n kh√¥ng th·ªÉ
            thi·∫øu v√† th∆∞·ªùng l√† c√°c m√≥n nh·∫π nh∆∞ soup, g·ªèi, salad, ho·∫∑c combo khai
            v·ªã 2 ƒë·∫øn 5 lo·∫°i tr√™n 1 ƒëƒ©a, ‚Ä¶.{" "}
            <span className="absolute -left-4 top-0 h-full w-2 bg-logo rounded-[2px]"></span>
          </p>
          <div className="grid grid-cols-[repeat(auto-fill,minmax(300px,1fr))] gap-3 my-3">
            {cateringAppetizerData?.map((menu, index) => {
              return (
                <Accordion
                  type="multiple"
                  className=" [&_svg]:text-primary-foreground bg-primary-foreground/5 h-fit"
                  key={menu.name}
                >
                  <AccordionItem
                    value={menu.name}
                    className="border-x border-primary/40"
                  >
                    <AccordionTrigger className="text-white bg-primary text-base uppercase px-2 py-2 my-0 font-medium hover:no-underline">
                      <div className="flex flex-row items-center text-[#beff00]">
                        <span className=" px-2 py-[2px] whitespace-nowrap">
                          {menu.name}
                        </span>
                      </div>
                    </AccordionTrigger>
                    <AccordionContent>
                      <div className="flex flex-col gap-2 text-base text-primary px-3 font-semibold ">
                        {menu.dishes?.map((item, idx) => {
                          return (
                            <div
                              className="flex flex-row justify-between items-center w-full border-b"
                              key={item.name}
                            >
                              <div className="flex flex-row flex-nowrap w-full">
                                <div>
                                  <span className="px-1 bg-[#e4e9a8b3] rounded-sm h-fit">
                                    {idx + 1}
                                  </span>
                                </div>
                                <div className="whitespace-normal">
                                  /&nbsp;{item.name}
                                </div>
                              </div>
                              <div>
                                {item.price
                                  .toString()
                                  .replace(/\B(?=(\d{3})+(?!\d))/gm, ".")}
                                &nbsp;VNƒê
                              </div>
                            </div>
                          );
                        })}
                      </div>
                    </AccordionContent>
                  </AccordionItem>
                </Accordion>
              );
            })}
            {cateringAppetizerComboData?.map((menu, index) => {
              return (
                <Accordion
                  type="multiple"
                  className=" [&_svg]:text-primary-foreground bg-primary-foreground/5 h-fit"
                  key={menu.name}
                >
                  <AccordionItem
                    value={menu.name}
                    className="border-x border-primary/40"
                  >
                    <AccordionTrigger className="text-white bg-primary text-base uppercase px-2 py-2 my-0 font-medium hover:no-underline">
                      <div className="flex flex-row items-center text-[#beff00]">
                        <span className=" px-2 py-[2px] whitespace-nowrap">
                          {menu.name}
                        </span>
                      </div>
                    </AccordionTrigger>
                    <AccordionContent>
                      <div className="flex flex-col gap-2 text-base text-primary px-3 font-semibold ">
                        {menu.dishes?.map((item, idx) => {
                          return (
                            <div
                              className="flex flex-row justify-between items-center w-full border-b border-primary"
                              key={idx}
                            >
                              <div className="flex flex-row flex-nowrap w-fit items-center">
                                <div className="h-fit">
                                  <span className="px-1 bg-[#e4e9a8b3] rounded-sm h-fit">
                                    {idx + 1}
                                  </span>
                                </div>
                                /&nbsp;
                                <div className="flex flex-col justify-center w-fit">
                                  {item.names?.map((name, index) => {
                                    return (
                                      <div
                                        className="whitespace-normal"
                                        key={index}
                                      >
                                        - {name}
                                      </div>
                                    );
                                  })}
                                </div>
                              </div>
                              {item.note ? <div>({item.note})</div> : null}
                              <div>
                                {item.price
                                  .toString()
                                  .replace(/\B(?=(\d{3})+(?!\d))/gm, ".")}
                                &nbsp;VNƒê
                              </div>
                            </div>
                          );
                        })}
                      </div>
                    </AccordionContent>
                  </AccordionItem>
                </Accordion>
              );
            })}
          </div>
          <span className="flex flex-row justify-center text-3xl max480:text-2xl font-semibold tracking-wider w-full py-2 my-3">
            <div className="relative block w-fit h-full rounded-md bg-primary text-[#beff00] px-5 py-1.5 z-[1] font-bold text-lg before:absolute before:top-[4px] before:-right-[0.5rem] before:bg-primary before:rounded-md before:h-[28px] before:w-[28px] before:-z-[1] before:rotate-45 after:absolute after:top-[4px] after:-left-[0.5rem] after:bg-primary after:rounded-md after:h-[28px] after:w-[28px] after:-z-[1] after:rotate-45 uppercase">
              M√≥n ch√≠nh
            </div>
          </span>
          <p className="relative block">
            üçóM√≥n ƒÉn ch√≠nh Kh√°ch h√†ng th∆∞·ªùng ch·ªçn c√°c m√≥n ƒÉn kh√¥, nhi·ªÅu ƒë·∫°m(nai,
            g√†, b√≤, ‚Ä¶), m√≥n rau c·ªß qu·∫£, m√≥n n∆∞·ªõc(l·∫©u c√°, l·∫©u cua, ‚Ä¶).{" "}
            <span className="absolute -left-4 top-0 h-full w-2 bg-logo rounded-[2px]"></span>
          </p>
          <div className="grid grid-cols-[repeat(auto-fill,minmax(300px,1fr))] gap-3 my-3">
            {cateringMainDishesData?.map((menu, idx) => {
              return (
                <Accordion
                  type="multiple"
                  className=" [&_svg]:text-primary-foreground bg-primary-foreground/5 h-fit"
                  key={menu.name}
                >
                  <AccordionItem
                    value={menu.name}
                    className="border-x border-primary/40"
                  >
                    <AccordionTrigger className="text-white bg-primary text-base uppercase px-2 py-2 my-0 font-medium hover:no-underline">
                      <div className="flex flex-row items-center text-[#beff00]">
                        <span className=" px-2 py-[2px] whitespace-nowrap">
                          {menu.name}
                        </span>
                      </div>
                    </AccordionTrigger>
                    <AccordionContent>
                      <div className="flex flex-col gap-2 text-base text-primary px-3 font-semibold ">
                        {menu.dishes?.map((item, idx) => {
                          return (
                            <div
                              className="flex flex-row justify-between items-center w-full border-b"
                              key={item.name}
                            >
                              <div className="flex flex-row flex-nowrap w-full">
                                <div>
                                  <span className="px-1 bg-[#e4e9a8b3] rounded-sm h-fit">
                                    {idx + 1}
                                  </span>
                                </div>
                                <div className="whitespace-normal">
                                  /&nbsp;{item.name}
                                </div>
                              </div>
                              <div>
                                {item.price
                                  .toString()
                                  .replace(/\B(?=(\d{3})+(?!\d))/gm, ".")}
                                &nbsp;VNƒê
                              </div>
                            </div>
                          );
                        })}
                      </div>
                    </AccordionContent>
                  </AccordionItem>
                </Accordion>
              );
            })}
          </div>
          <span className="flex flex-row justify-center text-3xl max480:text-2xl font-semibold tracking-wider w-full py-2 my-3">
            <div className="relative block w-fit h-full rounded-md bg-primary text-[#beff00] px-5 py-1.5 z-[1] font-bold text-lg before:absolute before:top-[4px] before:-right-[0.5rem] before:bg-primary before:rounded-md before:h-[28px] before:w-[28px] before:-z-[1] before:rotate-45 after:absolute after:top-[4px] after:-left-[0.5rem] after:bg-primary after:rounded-md after:h-[28px] after:w-[28px] after:-z-[1] after:rotate-45 uppercase">
              Tr√°ng mi·ªáng
            </div>
          </span>
          <p className="relative block">
            üçëƒê·ªÉ k·∫øt th√∫c b·ªØa ti·ªác m·ªçi ng∆∞·ªùi th∆∞·ªùng s·∫Ω ch·ªçn m√≥n tr√°ng mi·ªáng l√†
            tr√°i c√¢y, b√°nh plan ho·∫∑c th·∫°ch rau c√¢u.
            <span className="absolute -left-4 top-0 h-full w-2 bg-logo rounded-[2px]"></span>
          </p>
          <div className="grid grid-cols-[repeat(auto-fill,minmax(300px,1fr))] gap-3 my-3">
            {cateringDessertData?.map((menu, idx) => {
              return (
                <Accordion
                  type="multiple"
                  className=" [&_svg]:text-primary-foreground bg-primary-foreground/5 h-fit"
                  key={menu.name}
                >
                  <AccordionItem
                    value={menu.name}
                    className="border-x border-primary/40"
                  >
                    <AccordionTrigger className="text-white bg-primary text-base uppercase px-2 py-2 my-0 font-medium hover:no-underline">
                      <div className="flex flex-row items-center text-[#beff00]">
                        <span className=" px-2 py-[2px] whitespace-nowrap">
                          {menu.name}
                        </span>
                      </div>
                    </AccordionTrigger>
                    <AccordionContent>
                      <div className="flex flex-col gap-2 text-base text-primary px-3 font-semibold ">
                        {menu.dishes?.map((item, idx) => {
                          return (
                            <div
                              className="flex flex-row justify-between items-center w-full border-b"
                              key={item.name}
                            >
                              <div className="flex flex-row flex-nowrap w-full">
                                <div>
                                  <span className="px-1 bg-[#e4e9a8b3] rounded-sm h-fit">
                                    {idx + 1}
                                  </span>
                                </div>
                                <div className="whitespace-normal">
                                  /&nbsp;{item.name}
                                </div>
                              </div>
                              <div>
                                {item.price
                                  .toString()
                                  .replace(/\B(?=(\d{3})+(?!\d))/gm, ".")}
                                &nbsp;VNƒê
                              </div>
                            </div>
                          );
                        })}
                      </div>
                    </AccordionContent>
                  </AccordionItem>
                </Accordion>
              );
            })}
          </div>
          <span className="flex flex-row justify-center text-3xl max480:text-2xl font-semibold tracking-wider w-full py-2 my-3">
            <div className="relative block w-fit h-full rounded-md bg-primary text-[#beff00] px-5 py-1.5 z-[1] font-bold text-lg before:absolute before:top-[4px] before:-right-[0.5rem] before:bg-primary before:rounded-md before:h-[28px] before:w-[28px] before:-z-[1] before:rotate-45 after:absolute after:top-[4px] after:-left-[0.5rem] after:bg-primary after:rounded-md after:h-[28px] after:w-[28px] after:-z-[1] after:rotate-45 uppercase">
              Kh·∫£ nƒÉng
            </div>
          </span>
          <p>
            ‚ú®ƒê√°p ·ª©ng t·∫•t c·∫£ c√°c lo·∫°i ti·ªác t·ª´ 1 b√†n ƒë·∫øn 50, 100 b√†n v√† ph·ª•c v·ª•
            th·ª±c ƒë∆°n theo y√™u c·∫ßu c·ªßa kh√°ch h√†ng.
          </p>
          <p>
            ‚ú®Lu√¥n h·ªó tr·ª£ kh√°ch h√†ng khi kh√°ch mu·ªën thay ƒë·ªïi m√≥n ho·∫∑c h√¨nh th·ª©c
            t·ªï ch·ª©c. Ngu·ªìn g·ªëc c·ªßa th·ª±c ph·∫©m lu√¥n t∆∞∆°i s·ªëng ƒë∆∞·ª£c nh·∫≠p h√†ng v√†o
            s√°ng s·ªõm ng√†y t·ªï ch·ª©c ti·ªác ƒë·ªÉ lu√¥n ƒë√°p ·ª©ng t·ªët t√¨nh tr·∫°ng th·ª±c ph·∫©m
            cho kh√°ch h√†ng.
          </p>
          <p>
            ‚ú®B√™n c·∫°nh ƒë√≥, Thu S∆∞∆°ng c√≤n cung c·∫•p th√™m d·ªãch v·ª• trang tr√≠ ti·ªác,
            cho thu√™ k√®m thi·∫øt b·ªã, s√¢n kh·∫•u, MC, b√†n gh·∫ø, d·ª•ng c·ª• ƒÉn u·ªëng (ch√©n,
            b√°t, ƒëƒ©a, ‚Ä¶) theo b·ªô v·ªõi m·ª©c gi√° ph·∫£i chƒÉng.
          </p>
          <span className="flex flex-row justify-center text-3xl max480:text-2xl font-semibold tracking-wider w-full py-2 my-3">
            <div className="relative block w-fit h-full rounded-md bg-primary text-[#beff00] px-5 py-1.5 z-[1] font-bold text-lg before:absolute before:top-[4px] before:-right-[0.5rem] before:bg-primary before:rounded-md before:h-[28px] before:w-[28px] before:-z-[1] before:rotate-45 after:absolute after:top-[4px] after:-left-[0.5rem] after:bg-primary after:rounded-md after:h-[28px] after:w-[28px] after:-z-[1] after:rotate-45 uppercase">
              Quy tr√¨nh
            </div>
          </span>
          <div className="flex flex-col">
            Sau ƒë√¢y l√† 1 s·ªë b∆∞·ªõc m√† qu√Ω kh√°ch c√≥ th·ªÉ li√™n h·ªá ƒë·ªÉ ƒë·∫∑t ti·ªác:
            <p>
              - B∆∞·ªõc 1: G·ªçi ƒëi·ªán v√†o s·ªë hotline ho·∫∑c nh·∫Øn tin qua zalo s·ªë ƒëi·ªán
              tho·∫°i 097.291.2839 (Thu) ƒë·ªÉ ƒë∆∞·ª£c t∆∞ v·∫•n.
            </p>
            <p>
              - B∆∞·ªõc 2: Cung c·∫•p th√¥ng tin v·ªÅ b·ªØa ti·ªác ƒë·ªÉ ƒë∆∞·ª£c t∆∞ v·∫•n ch·ªçn th·ª±c
              ƒë∆°n theo lo·∫°i, theo mi·ªÅn ho·∫∑c theo y√™u c·∫ßu nh·∫•t ƒë·ªãnh cho qu√Ω
              kh√°ch.
            </p>
            <p>
              - B∆∞·ªõc 3: Sau khi th·ªëng nh·∫•t ho√†n t·∫•t th·ª±c ƒë∆°n, b√™n d·ªãch v·ª• s·∫Ω l√™n
              k·∫ø ho·∫°ch v√† b√°o gi√° t·ªïng chi ti·∫øt c√°c h·∫°ng m·ª•c.
            </p>
            <p>
              - B∆∞·ªõc 4: ƒê√∫ng ng√†y t·ªï ch·ª©c ti·ªác, d·ªãch v·ª• s·∫Ω ƒë·∫øn n∆°i m√† qu√Ω kh√°ch
              mu·ªën t·ªï ch·ª©c ti·ªác ƒë·ªÉ chu·∫©n b·ªã, setup, trang tr√≠ kh√¥ng gian ti·ªác v√†
              ƒë·∫øn gi·ªù nh√¢n vi√™n s·∫Ω l√™n m√≥n ph·ª•c v·ª• qu√Ω kh√°ch.
            </p>
            <p>
              - B∆∞·ªõc 5: Khi xong ti·ªác, nh√¢n vi√™n c·ªßa Thu S∆∞∆°ng s·∫Ω d·ªçn d·∫πp v√† b√†n
              giao l·∫°i m·∫∑t b·∫±ng nh∆∞ ban ƒë·∫ßu cho qu√Ω kh√°ch.
            </p>
          </div>
          <span className="flex flex-row justify-center text-3xl max480:text-2xl font-semibold tracking-wider w-full py-2 my-3">
            <div className="relative block w-fit h-full rounded-md bg-primary text-[#beff00] px-5 py-1.5 z-[1] font-bold text-lg before:absolute before:top-[4px] before:-right-[0.5rem] before:bg-primary before:rounded-md before:h-[28px] before:w-[28px] before:-z-[1] before:rotate-45 after:absolute after:top-[4px] after:-left-[0.5rem] after:bg-primary after:rounded-md after:h-[28px] after:w-[28px] after:-z-[1] after:rotate-45 uppercase">
              Th√¥ng tin li√™n h·ªá
            </div>
          </span>
          <div className="flex flex-col">
            <p>
              ‚òéÔ∏è <span className="font-semibold">ƒê·∫∑t ti·ªác</span>: 0973912839 -
              Thu (Zalo){" "}
            </p>
            <p>
              ‚è∞ <span className="font-semibold">Th·ªùi gian l√†m vi·ªác</span>: T·∫•t
              c·∫£ c√°c ng√†y trong tu·∫ßn{" "}
            </p>
            <p>
              üè£ <span className="font-semibold">ƒê·ªãa ch·ªâ</span> : 108/14, ƒë∆∞·ªùng
              Th·∫°nh Xu√¢n 21 (TX21), Ph∆∞·ªùng Th·∫°nh Xu√¢n, Qu·∫≠n 12, TP.HCM{" "}
            </p>
            <p className="font-semibold"> üèÜ CH·∫§T L∆Ø·ª¢NG - UY T√çN - TI·∫æT KI·ªÜM</p>
          </div>
        </div>
      </div>
    </>
  );
}
